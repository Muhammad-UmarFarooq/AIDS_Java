abstract class shape{

    //abstract methods
    abstract double area();
    public abstract String tostring();

    //variable
    String color;

    //constructor
    public shape(String color)
    {
        System.out.println("shape constructor called");
        this.color=color;
    }

    //method
    public String getcolor()
    {
        return color;
    }
}
class circle extends shape{
    //variable
    double radius;

    //constructor
    public circle(String color,double radius)
    {
        super(color);
        System.out.println("circle constructor called");
        this.radius=radius;
    }

    //abstract method implementation
    double area()
    {
        return radius*radius;
    }
    //if we dont specify public to this overriden method then it returns error
    public String tostring()
    {
        return "circle color is "+super.getcolor()+" and area is : "+area();
    }
}

class rectangle extends shape{
    //variable
    double length;
    double width;

    //constructor
    public rectangle(String color,double length,double width)
    {
        super(color);
        System.out.println("rectangle constructor called");
        this.length=length;
        this.width=width;
    }

    //abstract method implementation
    double area()
    {
        return length * width;
    }
    public String tostring()
    {
        return "rectangle color is "+super.getcolor()+" and area is : "+area();
    }
}

// main class
public class main{
    public static void main(String args[])
    {
        shape s1=new circle("red",2);
        shape s2=new rectangle("yellow",2,4);
        System.out.println(s1.tostring());
        System.out.println(s2.tostring());

    }
}
